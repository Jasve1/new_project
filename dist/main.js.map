{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./src/app.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","createElm","nodeType","content","textNode","document","createTextNode","node","createNode","append","createElement","parent","children","Array","isArray","forEach","child","appendChild","remove","removeChild","firstUpperCase","string","charAt","toUpperCase","slice","createList","ul","map","elm","li","title","text","url","main","querySelector","isloading","loading","utils","_callee","regeneratorRuntime","wrap","_context","prev","next","fetch","then","res","json","populateUsers","results","catch","error","stop","users","user","concat","first","last","thumbnailSrc","picture","thumbnail","gender","contactInfo","phone","email","article","setAttribute","header","footer","nameNode","genderNode","contactList","img","onclick","e","preventDefault","medImageSrc","medium","username","login","address","location","street","postcode","city","timezone","offset","description","userDetails","overlay","exit","usernameNode","contactInfoNode","showMore","createUser","getUsers","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","unwrapped","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","accidentalStrictMode","Function"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","function createList(content){\r\n    const ul = createNode('ul');\r\n    content.map(elm => {\r\n        const li = createNode('li');\r\n        let title = createElm('h4', elm.title);\r\n        let info = createElm('p', elm.text);\r\n        append(li, [title, info]);\r\n        append(ul, li);\r\n    })\r\n    return ul\r\n}\r\n\r\nfunction createElm(nodeType, content) {\r\n    let textNode = document.createTextNode(content);\r\n    let node = createNode(nodeType);\r\n    append(node, textNode);\r\n    return node;\r\n}\r\n\r\nfunction createNode(node){\r\n    return document.createElement(node)\r\n}\r\n\r\nfunction append(parent, children){\r\n    if(Array.isArray(children)){\r\n        return children.forEach(child => {\r\n            parent.appendChild(child);\r\n        }); \r\n    }\r\n    return parent.appendChild(children);\r\n}\r\n\r\nfunction remove(parent, children){\r\n    if(Array.isArray(children)){\r\n        return children.forEach(child => {\r\n            parent.removeChild(child);\r\n        }); \r\n    }\r\n    return parent.removeChild(children);\r\n}\r\n\r\nfunction firstUpperCase(string){\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nmodule.exports = {createNode, append, remove, firstUpperCase, createElm, createList};","import \"./styles/style.scss\"\r\nimport \"regenerator-runtime\"\r\n\r\n//Utils\r\nimport utils from \"./utils\";\r\n\r\nconst url = 'https://randomuser.me/api/?results=100';\r\n\r\nconst main = document.querySelector('main');\r\n\r\nlet isloading = true;\r\n\r\nlet loading = utils.createElm('h2', 'loading...');\r\nutils.append(main, loading);\r\n\r\nasync function getUsers(){\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n        isloading = false;\r\n        populateUsers(json.results);\r\n    })\r\n    .catch(() => {\r\n        utils.remove(main, loading);\r\n        let error = utils.createElm('h2', 'No users where found');\r\n        utils.append(main, error);\r\n    })\r\n}\r\n\r\nfunction populateUsers(users){\r\n    if(!isloading){\r\n        utils.remove(main, loading);\r\n        users.map(user => {\r\n            createUser(user);\r\n        });\r\n    }\r\n}\r\n\r\nfunction createUser(user){\r\n    //User info\r\n    let name = `${utils.firstUpperCase(user.name.first)} ${utils.firstUpperCase(user.name.last)}`;\r\n    let thumbnailSrc = user.picture.thumbnail;\r\n    let gender = user.gender;\r\n    let contactInfo = [\r\n        {\r\n            title: 'Phone Nr.:',\r\n            text: user.phone\r\n        }, \r\n        {\r\n            title: 'Email:',\r\n            text: user.email\r\n        }\r\n    ];\r\n\r\n    //DOM Elements\r\n    const article = utils.createNode('article');\r\n    article.setAttribute('class', 'user');\r\n    const header = utils.createNode('header');\r\n    const footer = utils.createNode('footer');\r\n\r\n    //Name\r\n    let nameNode = utils.createElm('h2', name);\r\n\r\n    //Gender\r\n    let genderNode = utils.createElm('i', gender);\r\n    genderNode.setAttribute('class', 'desktop');\r\n\r\n    //ContactInfo\r\n    let contactList = utils.createList(contactInfo);\r\n    contactList.setAttribute('class', 'desktop');\r\n\r\n    //Thumbnail\r\n    const img = utils.createNode('img');\r\n    img.setAttribute('src', thumbnailSrc); \r\n\r\n    utils.append(main, article);\r\n    utils.append(article, [header, footer]);\r\n    utils.append(header, [img, nameNode, genderNode]);\r\n    utils.append(footer, contactList);\r\n\r\n    header.onclick = function(e){\r\n        e.preventDefault();\r\n        showMore(user);\r\n    }\r\n    \r\n}\r\n\r\nfunction showMore(user){\r\n    //User info\r\n    let name = `${utils.firstUpperCase(user.name.first)} ${utils.firstUpperCase(user.name.last)}`;\r\n    let medImageSrc = user.picture.medium;\r\n    let gender = user.gender;\r\n    let username = `Username: ${user.login.username}`;\r\n    let address = `${user.location.street}, ${user.location.postcode} ${user.location.city}`;\r\n    let timezone = `UTC ${user.location.timezone.offset}, ${user.location.timezone.description}`;\r\n    let contactInfo = [\r\n        {\r\n            title: 'Phone Nr.:',\r\n            text: user.phone\r\n        }, \r\n        {\r\n            title: 'Email:',\r\n            text: user.email\r\n        }, \r\n        {\r\n            title: 'Adress:',\r\n            text: address\r\n        }, \r\n        {\r\n            title: 'Timezone',\r\n            text: timezone\r\n        }\r\n    ];\r\n\r\n    //DOM Elements\r\n    const userDetails = utils.createNode('div');\r\n    userDetails.setAttribute('class', 'show');\r\n    const header = utils.createNode('header');\r\n    const overlay = utils.createNode('div');\r\n    overlay.setAttribute('id', 'overlay');\r\n    const exit = utils.createElm('span', 'X');\r\n    exit.setAttribute('id', 'exit');\r\n\r\n    //Name \r\n    let nameNode = utils.createElm('h2', name);\r\n\r\n    //Username\r\n    let usernameNode = utils.createElm('h3', username)\r\n\r\n    //Gender\r\n    let genderNode = utils.createElm('i', gender);\r\n\r\n    //Image\r\n    const img = utils.createNode('img');\r\n    img.setAttribute('src', medImageSrc);\r\n\r\n    //Contact Info\r\n    const contactInfoNode = utils.createList(contactInfo);\r\n\r\n    utils.append(header, [img, nameNode, usernameNode, genderNode]);\r\n    utils.append(userDetails, [header, exit, contactInfoNode]);\r\n    utils.append(main, [userDetails, overlay]);\r\n\r\n    //Remove extra content again\r\n    overlay.onclick = remove;\r\n    exit.onclick = remove;\r\n    function remove(){\r\n        utils.remove(main, [userDetails, overlay]);\r\n    }\r\n}\r\n\r\ngetUsers();\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}